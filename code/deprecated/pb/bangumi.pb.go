// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bangumi.proto

package bangumi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BangumiDetailReq struct {
	BangumiId            int32    `protobuf:"varint,1,opt,name=bangumi_id,json=bangumiId,proto3" json:"bangumi_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BangumiDetailReq) Reset()         { *m = BangumiDetailReq{} }
func (m *BangumiDetailReq) String() string { return proto.CompactTextString(m) }
func (*BangumiDetailReq) ProtoMessage()    {}
func (*BangumiDetailReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8caaddddb2fb54d8, []int{0}
}

func (m *BangumiDetailReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BangumiDetailReq.Unmarshal(m, b)
}
func (m *BangumiDetailReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BangumiDetailReq.Marshal(b, m, deterministic)
}
func (m *BangumiDetailReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BangumiDetailReq.Merge(m, src)
}
func (m *BangumiDetailReq) XXX_Size() int {
	return xxx_messageInfo_BangumiDetailReq.Size(m)
}
func (m *BangumiDetailReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BangumiDetailReq.DiscardUnknown(m)
}

var xxx_messageInfo_BangumiDetailReq proto.InternalMessageInfo

func (m *BangumiDetailReq) GetBangumiId() int32 {
	if m != nil {
		return m.BangumiId
	}
	return 0
}

type BangumiListReq struct {
	Page                 int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BangumiListReq) Reset()         { *m = BangumiListReq{} }
func (m *BangumiListReq) String() string { return proto.CompactTextString(m) }
func (*BangumiListReq) ProtoMessage()    {}
func (*BangumiListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8caaddddb2fb54d8, []int{1}
}

func (m *BangumiListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BangumiListReq.Unmarshal(m, b)
}
func (m *BangumiListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BangumiListReq.Marshal(b, m, deterministic)
}
func (m *BangumiListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BangumiListReq.Merge(m, src)
}
func (m *BangumiListReq) XXX_Size() int {
	return xxx_messageInfo_BangumiListReq.Size(m)
}
func (m *BangumiListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BangumiListReq.DiscardUnknown(m)
}

var xxx_messageInfo_BangumiListReq proto.InternalMessageInfo

func (m *BangumiListReq) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type BangumiInfo struct {
	BangumiId            int32    `protobuf:"varint,1,opt,name=bangumi_id,json=bangumiId,proto3" json:"bangumi_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CoverUrl             string   `protobuf:"bytes,3,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`
	Tags                 string   `protobuf:"bytes,4,opt,name=tags,proto3" json:"tags,omitempty"`
	BangumiScore         float32  `protobuf:"fixed32,5,opt,name=bangumi_score,json=bangumiScore,proto3" json:"bangumi_score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BangumiInfo) Reset()         { *m = BangumiInfo{} }
func (m *BangumiInfo) String() string { return proto.CompactTextString(m) }
func (*BangumiInfo) ProtoMessage()    {}
func (*BangumiInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8caaddddb2fb54d8, []int{2}
}

func (m *BangumiInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BangumiInfo.Unmarshal(m, b)
}
func (m *BangumiInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BangumiInfo.Marshal(b, m, deterministic)
}
func (m *BangumiInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BangumiInfo.Merge(m, src)
}
func (m *BangumiInfo) XXX_Size() int {
	return xxx_messageInfo_BangumiInfo.Size(m)
}
func (m *BangumiInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BangumiInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BangumiInfo proto.InternalMessageInfo

func (m *BangumiInfo) GetBangumiId() int32 {
	if m != nil {
		return m.BangumiId
	}
	return 0
}

func (m *BangumiInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BangumiInfo) GetCoverUrl() string {
	if m != nil {
		return m.CoverUrl
	}
	return ""
}

func (m *BangumiInfo) GetTags() string {
	if m != nil {
		return m.Tags
	}
	return ""
}

func (m *BangumiInfo) GetBangumiScore() float32 {
	if m != nil {
		return m.BangumiScore
	}
	return 0
}

type BangumiDetail struct {
	BangumiId            int32    `protobuf:"varint,1,opt,name=bangumi_id,json=bangumiId,proto3" json:"bangumi_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CoverUrl             string   `protobuf:"bytes,3,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`
	BangumiScore         float32  `protobuf:"fixed32,4,opt,name=bangumi_score,json=bangumiScore,proto3" json:"bangumi_score,omitempty"`
	VoteNum              int32    `protobuf:"varint,5,opt,name=vote_num,json=voteNum,proto3" json:"vote_num,omitempty"`
	EpisodeNum           int32    `protobuf:"varint,6,opt,name=episode_num,json=episodeNum,proto3" json:"episode_num,omitempty"`
	Tags                 string   `protobuf:"bytes,7,opt,name=tags,proto3" json:"tags,omitempty"`
	Desc                 string   `protobuf:"bytes,8,opt,name=desc,proto3" json:"desc,omitempty"`
	StaffList            string   `protobuf:"bytes,9,opt,name=staff_list,json=staffList,proto3" json:"staff_list,omitempty"`
	CvList               string   `protobuf:"bytes,10,opt,name=cv_list,json=cvList,proto3" json:"cv_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BangumiDetail) Reset()         { *m = BangumiDetail{} }
func (m *BangumiDetail) String() string { return proto.CompactTextString(m) }
func (*BangumiDetail) ProtoMessage()    {}
func (*BangumiDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_8caaddddb2fb54d8, []int{3}
}

func (m *BangumiDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BangumiDetail.Unmarshal(m, b)
}
func (m *BangumiDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BangumiDetail.Marshal(b, m, deterministic)
}
func (m *BangumiDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BangumiDetail.Merge(m, src)
}
func (m *BangumiDetail) XXX_Size() int {
	return xxx_messageInfo_BangumiDetail.Size(m)
}
func (m *BangumiDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_BangumiDetail.DiscardUnknown(m)
}

var xxx_messageInfo_BangumiDetail proto.InternalMessageInfo

func (m *BangumiDetail) GetBangumiId() int32 {
	if m != nil {
		return m.BangumiId
	}
	return 0
}

func (m *BangumiDetail) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BangumiDetail) GetCoverUrl() string {
	if m != nil {
		return m.CoverUrl
	}
	return ""
}

func (m *BangumiDetail) GetBangumiScore() float32 {
	if m != nil {
		return m.BangumiScore
	}
	return 0
}

func (m *BangumiDetail) GetVoteNum() int32 {
	if m != nil {
		return m.VoteNum
	}
	return 0
}

func (m *BangumiDetail) GetEpisodeNum() int32 {
	if m != nil {
		return m.EpisodeNum
	}
	return 0
}

func (m *BangumiDetail) GetTags() string {
	if m != nil {
		return m.Tags
	}
	return ""
}

func (m *BangumiDetail) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *BangumiDetail) GetStaffList() string {
	if m != nil {
		return m.StaffList
	}
	return ""
}

func (m *BangumiDetail) GetCvList() string {
	if m != nil {
		return m.CvList
	}
	return ""
}

type BangumiList struct {
	BangumiList          []*BangumiInfo `protobuf:"bytes,1,rep,name=bangumi_list,json=bangumiList,proto3" json:"bangumi_list,omitempty"`
	Msg                  string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BangumiList) Reset()         { *m = BangumiList{} }
func (m *BangumiList) String() string { return proto.CompactTextString(m) }
func (*BangumiList) ProtoMessage()    {}
func (*BangumiList) Descriptor() ([]byte, []int) {
	return fileDescriptor_8caaddddb2fb54d8, []int{4}
}

func (m *BangumiList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BangumiList.Unmarshal(m, b)
}
func (m *BangumiList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BangumiList.Marshal(b, m, deterministic)
}
func (m *BangumiList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BangumiList.Merge(m, src)
}
func (m *BangumiList) XXX_Size() int {
	return xxx_messageInfo_BangumiList.Size(m)
}
func (m *BangumiList) XXX_DiscardUnknown() {
	xxx_messageInfo_BangumiList.DiscardUnknown(m)
}

var xxx_messageInfo_BangumiList proto.InternalMessageInfo

func (m *BangumiList) GetBangumiList() []*BangumiInfo {
	if m != nil {
		return m.BangumiList
	}
	return nil
}

func (m *BangumiList) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type FavoriteReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FavoriteReq) Reset()         { *m = FavoriteReq{} }
func (m *FavoriteReq) String() string { return proto.CompactTextString(m) }
func (*FavoriteReq) ProtoMessage()    {}
func (*FavoriteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8caaddddb2fb54d8, []int{5}
}

func (m *FavoriteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FavoriteReq.Unmarshal(m, b)
}
func (m *FavoriteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FavoriteReq.Marshal(b, m, deterministic)
}
func (m *FavoriteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FavoriteReq.Merge(m, src)
}
func (m *FavoriteReq) XXX_Size() int {
	return xxx_messageInfo_FavoriteReq.Size(m)
}
func (m *FavoriteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FavoriteReq.DiscardUnknown(m)
}

var xxx_messageInfo_FavoriteReq proto.InternalMessageInfo

func (m *FavoriteReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type FavoriteRsp struct {
	FavoritesList        []*BangumiInfo `protobuf:"bytes,1,rep,name=favorites_list,json=favoritesList,proto3" json:"favorites_list,omitempty"`
	Msg                  string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *FavoriteRsp) Reset()         { *m = FavoriteRsp{} }
func (m *FavoriteRsp) String() string { return proto.CompactTextString(m) }
func (*FavoriteRsp) ProtoMessage()    {}
func (*FavoriteRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_8caaddddb2fb54d8, []int{6}
}

func (m *FavoriteRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FavoriteRsp.Unmarshal(m, b)
}
func (m *FavoriteRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FavoriteRsp.Marshal(b, m, deterministic)
}
func (m *FavoriteRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FavoriteRsp.Merge(m, src)
}
func (m *FavoriteRsp) XXX_Size() int {
	return xxx_messageInfo_FavoriteRsp.Size(m)
}
func (m *FavoriteRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_FavoriteRsp.DiscardUnknown(m)
}

var xxx_messageInfo_FavoriteRsp proto.InternalMessageInfo

func (m *FavoriteRsp) GetFavoritesList() []*BangumiInfo {
	if m != nil {
		return m.FavoritesList
	}
	return nil
}

func (m *FavoriteRsp) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type SessionReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionReq) Reset()         { *m = SessionReq{} }
func (m *SessionReq) String() string { return proto.CompactTextString(m) }
func (*SessionReq) ProtoMessage()    {}
func (*SessionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8caaddddb2fb54d8, []int{7}
}

func (m *SessionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionReq.Unmarshal(m, b)
}
func (m *SessionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionReq.Marshal(b, m, deterministic)
}
func (m *SessionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionReq.Merge(m, src)
}
func (m *SessionReq) XXX_Size() int {
	return xxx_messageInfo_SessionReq.Size(m)
}
func (m *SessionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionReq.DiscardUnknown(m)
}

var xxx_messageInfo_SessionReq proto.InternalMessageInfo

func (m *SessionReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SessionReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type SessionRsp struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	FavBangumiList       string   `protobuf:"bytes,5,opt,name=fav_bangumi_list,json=favBangumiList,proto3" json:"fav_bangumi_list,omitempty"`
	Msg                  string   `protobuf:"bytes,6,opt,name=msg,proto3" json:"msg,omitempty"`
	Jwt                  string   `protobuf:"bytes,7,opt,name=jwt,proto3" json:"jwt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionRsp) Reset()         { *m = SessionRsp{} }
func (m *SessionRsp) String() string { return proto.CompactTextString(m) }
func (*SessionRsp) ProtoMessage()    {}
func (*SessionRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_8caaddddb2fb54d8, []int{8}
}

func (m *SessionRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRsp.Unmarshal(m, b)
}
func (m *SessionRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRsp.Marshal(b, m, deterministic)
}
func (m *SessionRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRsp.Merge(m, src)
}
func (m *SessionRsp) XXX_Size() int {
	return xxx_messageInfo_SessionRsp.Size(m)
}
func (m *SessionRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRsp.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRsp proto.InternalMessageInfo

func (m *SessionRsp) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SessionRsp) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *SessionRsp) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SessionRsp) GetFavBangumiList() string {
	if m != nil {
		return m.FavBangumiList
	}
	return ""
}

func (m *SessionRsp) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *SessionRsp) GetJwt() string {
	if m != nil {
		return m.Jwt
	}
	return ""
}

type RegisterReq struct {
	Password             string   `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterReq) Reset()         { *m = RegisterReq{} }
func (m *RegisterReq) String() string { return proto.CompactTextString(m) }
func (*RegisterReq) ProtoMessage()    {}
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8caaddddb2fb54d8, []int{9}
}

func (m *RegisterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterReq.Unmarshal(m, b)
}
func (m *RegisterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterReq.Marshal(b, m, deterministic)
}
func (m *RegisterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterReq.Merge(m, src)
}
func (m *RegisterReq) XXX_Size() int {
	return xxx_messageInfo_RegisterReq.Size(m)
}
func (m *RegisterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterReq.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterReq proto.InternalMessageInfo

func (m *RegisterReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *RegisterReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *RegisterReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type RegisterRsp struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRsp) Reset()         { *m = RegisterRsp{} }
func (m *RegisterRsp) String() string { return proto.CompactTextString(m) }
func (*RegisterRsp) ProtoMessage()    {}
func (*RegisterRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_8caaddddb2fb54d8, []int{10}
}

func (m *RegisterRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRsp.Unmarshal(m, b)
}
func (m *RegisterRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRsp.Marshal(b, m, deterministic)
}
func (m *RegisterRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRsp.Merge(m, src)
}
func (m *RegisterRsp) XXX_Size() int {
	return xxx_messageInfo_RegisterRsp.Size(m)
}
func (m *RegisterRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRsp.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRsp proto.InternalMessageInfo

func (m *RegisterRsp) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RegisterRsp) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*BangumiDetailReq)(nil), "BangumiDetailReq")
	proto.RegisterType((*BangumiListReq)(nil), "BangumiListReq")
	proto.RegisterType((*BangumiInfo)(nil), "BangumiInfo")
	proto.RegisterType((*BangumiDetail)(nil), "BangumiDetail")
	proto.RegisterType((*BangumiList)(nil), "BangumiList")
	proto.RegisterType((*FavoriteReq)(nil), "FavoriteReq")
	proto.RegisterType((*FavoriteRsp)(nil), "FavoriteRsp")
	proto.RegisterType((*SessionReq)(nil), "SessionReq")
	proto.RegisterType((*SessionRsp)(nil), "SessionRsp")
	proto.RegisterType((*RegisterReq)(nil), "RegisterReq")
	proto.RegisterType((*RegisterRsp)(nil), "RegisterRsp")
}

func init() {
	proto.RegisterFile("bangumi.proto", fileDescriptor_8caaddddb2fb54d8)
}

var fileDescriptor_8caaddddb2fb54d8 = []byte{
	// 687 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xcf, 0x6e, 0xd3, 0x4e,
	0x10, 0x96, 0xf3, 0xaf, 0xc9, 0x38, 0x49, 0xf3, 0x5b, 0xfd, 0x00, 0xe3, 0xfe, 0x21, 0x5a, 0x7a,
	0x88, 0x38, 0xc4, 0x6a, 0x7a, 0x41, 0x9c, 0xa0, 0x42, 0x54, 0x95, 0x10, 0x42, 0x09, 0x3d, 0x15,
	0x29, 0xda, 0xc6, 0x1b, 0x6b, 0x91, 0xe3, 0x35, 0xde, 0x8d, 0x7b, 0xa8, 0x7a, 0xe1, 0x11, 0x40,
	0xe2, 0xc4, 0x81, 0x37, 0xe1, 0x21, 0x78, 0x05, 0x1e, 0x04, 0xed, 0x7a, 0xed, 0x38, 0x4d, 0x2b,
	0x38, 0x70, 0xdb, 0xf9, 0x66, 0xe6, 0xdb, 0xf9, 0x66, 0x66, 0x17, 0x3a, 0x17, 0x24, 0x0a, 0x96,
	0x0b, 0x36, 0x8c, 0x13, 0x2e, 0xb9, 0xbb, 0x1b, 0x70, 0x1e, 0x84, 0xd4, 0x23, 0x31, 0xf3, 0x48,
	0x14, 0x71, 0x49, 0x24, 0xe3, 0x91, 0xc8, 0xbc, 0xf8, 0x10, 0x7a, 0xc7, 0x59, 0xf8, 0x4b, 0x2a,
	0x09, 0x0b, 0xc7, 0xf4, 0x23, 0xda, 0x03, 0x30, 0x14, 0x53, 0xe6, 0x3b, 0x56, 0xdf, 0x1a, 0xd4,
	0xc7, 0x2d, 0x83, 0x9c, 0xfa, 0xf8, 0x00, 0xba, 0x26, 0xe5, 0x35, 0x13, 0x52, 0x25, 0x20, 0xa8,
	0xc5, 0x24, 0xa0, 0x26, 0x54, 0x9f, 0xf1, 0x57, 0x0b, 0x6c, 0x13, 0x76, 0x1a, 0xcd, 0xf9, 0x1f,
	0x48, 0x15, 0x45, 0x44, 0x16, 0xd4, 0xa9, 0xf4, 0xad, 0x41, 0x6b, 0xac, 0xcf, 0x68, 0x07, 0x5a,
	0x33, 0x9e, 0xd2, 0x64, 0xba, 0x4c, 0x42, 0xa7, 0xaa, 0x1d, 0x4d, 0x0d, 0x9c, 0x25, 0xa1, 0x4a,
	0x90, 0x24, 0x10, 0x4e, 0x2d, 0x4b, 0x50, 0x67, 0xf4, 0xb8, 0xd0, 0x3e, 0x15, 0x33, 0x9e, 0x50,
	0xa7, 0xde, 0xb7, 0x06, 0x95, 0x71, 0xdb, 0x80, 0x13, 0x85, 0xe1, 0xef, 0x15, 0xe8, 0xac, 0x49,
	0xfe, 0xe7, 0xa5, 0x6d, 0x94, 0x51, 0xdb, 0x2c, 0x03, 0x3d, 0x84, 0x66, 0xca, 0x25, 0x9d, 0x46,
	0xcb, 0x85, 0x2e, 0xb3, 0x3e, 0xde, 0x52, 0xf6, 0x9b, 0xe5, 0x02, 0x3d, 0x02, 0x9b, 0xc6, 0x4c,
	0x70, 0x3f, 0xf3, 0x36, 0xb4, 0x17, 0x0c, 0xa4, 0x02, 0x72, 0xed, 0x5b, 0x25, 0xed, 0x08, 0x6a,
	0x3e, 0x15, 0x33, 0xa7, 0x99, 0x61, 0xea, 0xac, 0x84, 0x09, 0x49, 0xe6, 0xf3, 0x69, 0xc8, 0x84,
	0x74, 0x5a, 0xda, 0xd3, 0xd2, 0x88, 0x9a, 0x1c, 0x7a, 0x00, 0x5b, 0xb3, 0x34, 0xf3, 0x81, 0xf6,
	0x35, 0x66, 0xa9, 0x72, 0xe0, 0xb7, 0xc5, 0xe8, 0x74, 0x9c, 0x07, 0x79, 0xe9, 0x59, 0xb0, 0xd5,
	0xaf, 0x0e, 0xec, 0x51, 0x7b, 0x58, 0x1a, 0xef, 0xd8, 0xbe, 0x28, 0x25, 0xf4, 0xa0, 0xba, 0x10,
	0x81, 0x69, 0x98, 0x3a, 0xe2, 0x3d, 0xb0, 0x5f, 0x91, 0x94, 0x27, 0x4c, 0x52, 0xb5, 0x30, 0x5d,
	0xa8, 0x14, 0x9d, 0xae, 0x30, 0x1f, 0xbf, 0x2b, 0xb9, 0x45, 0x8c, 0x8e, 0xa0, 0x3b, 0x37, 0xa6,
	0xb8, 0xfb, 0xca, 0x4e, 0x11, 0x73, 0xc7, 0xa5, 0x4f, 0x01, 0x26, 0x54, 0x08, 0xc6, 0xa3, 0x5b,
	0xee, 0x44, 0x2e, 0x34, 0x63, 0x22, 0xc4, 0x25, 0x4f, 0x7c, 0x93, 0x54, 0xd8, 0xf8, 0x9b, 0xb5,
	0x4a, 0x15, 0xf1, 0x6d, 0xa9, 0x4b, 0x41, 0x93, 0xd2, 0x56, 0x14, 0x36, 0xfa, 0x1f, 0xea, 0x74,
	0x41, 0x58, 0x68, 0x16, 0x33, 0x33, 0xd0, 0x00, 0x7a, 0x73, 0x92, 0x4e, 0xd7, 0xda, 0x58, 0xd7,
	0x01, 0x4a, 0xe9, 0xf1, 0x66, 0xef, 0x1a, 0x85, 0x0c, 0x85, 0x7c, 0xb8, 0x94, 0x66, 0xd8, 0xea,
	0x88, 0xcf, 0xc1, 0x1e, 0xd3, 0x80, 0x09, 0x49, 0x13, 0xa5, 0xac, 0xac, 0xc4, 0x5a, 0x57, 0xf2,
	0x77, 0xa5, 0x56, 0x4b, 0xa5, 0x62, 0xaf, 0x44, 0x7e, 0x8b, 0xf6, 0x8d, 0x36, 0x8f, 0x7e, 0x58,
	0x60, 0xab, 0x81, 0x4c, 0x68, 0x92, 0xb2, 0x19, 0x45, 0xe7, 0xd0, 0x3b, 0xa1, 0x72, 0xfd, 0x89,
	0xfd, 0x37, 0xbc, 0xf9, 0xcb, 0xb8, 0xdd, 0x75, 0x08, 0x1f, 0x7c, 0xfa, 0xf9, 0xeb, 0x4b, 0x65,
	0x1f, 0xed, 0xea, 0x9f, 0x2a, 0x3d, 0xf4, 0x4c, 0xb3, 0xbc, 0xab, 0xd5, 0xe3, 0xbc, 0x46, 0x13,
	0xe8, 0xae, 0xc8, 0x75, 0xc3, 0xb6, 0x87, 0xeb, 0xbf, 0x91, 0xdb, 0x2e, 0x03, 0x18, 0x6b, 0xda,
	0x5d, 0xe4, 0xde, 0xa4, 0x25, 0x61, 0xe8, 0x5d, 0xa9, 0xaf, 0xea, 0x7a, 0xf4, 0x1e, 0xb6, 0xf3,
	0xf5, 0xcb, 0x45, 0x9c, 0x82, 0x7d, 0x42, 0x65, 0x8e, 0xa2, 0xf6, 0xb0, 0xb4, 0xbe, 0x6e, 0xc9,
	0x12, 0x31, 0xde, 0xd7, 0x37, 0x38, 0xe8, 0x7e, 0x7e, 0xc3, 0x15, 0xf3, 0xaf, 0xbd, 0x62, 0x39,
	0x47, 0x9f, 0x2d, 0xb0, 0xcf, 0x04, 0x4d, 0x72, 0xea, 0x17, 0xd0, 0x34, 0xbb, 0x25, 0x90, 0x3d,
	0x5c, 0x6d, 0xa8, 0xbb, 0x32, 0x44, 0x8c, 0x77, 0x34, 0xeb, 0x3d, 0xdc, 0xcb, 0x59, 0x85, 0xc9,
	0x79, 0x66, 0x3d, 0x41, 0xcf, 0xa1, 0x99, 0xcf, 0x08, 0xb5, 0x87, 0xa5, 0x5d, 0x70, 0x4b, 0x96,
	0x88, 0xb1, 0xa3, 0x49, 0x10, 0xee, 0xe4, 0x24, 0x6a, 0xf6, 0x8a, 0xe1, 0xa2, 0xa1, 0xbf, 0xff,
	0xa3, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x36, 0x55, 0xff, 0x68, 0x2d, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// InfoServiceClient is the client API for InfoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InfoServiceClient interface {
	GetBangumiDetail(ctx context.Context, in *BangumiDetailReq, opts ...grpc.CallOption) (*BangumiDetail, error)
	GetBangumiList(ctx context.Context, in *BangumiListReq, opts ...grpc.CallOption) (*BangumiList, error)
}

type infoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewInfoServiceClient(cc grpc.ClientConnInterface) InfoServiceClient {
	return &infoServiceClient{cc}
}

func (c *infoServiceClient) GetBangumiDetail(ctx context.Context, in *BangumiDetailReq, opts ...grpc.CallOption) (*BangumiDetail, error) {
	out := new(BangumiDetail)
	err := c.cc.Invoke(ctx, "/InfoService/GetBangumiDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoServiceClient) GetBangumiList(ctx context.Context, in *BangumiListReq, opts ...grpc.CallOption) (*BangumiList, error) {
	out := new(BangumiList)
	err := c.cc.Invoke(ctx, "/InfoService/GetBangumiList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InfoServiceServer is the server API for InfoService service.
type InfoServiceServer interface {
	GetBangumiDetail(context.Context, *BangumiDetailReq) (*BangumiDetail, error)
	GetBangumiList(context.Context, *BangumiListReq) (*BangumiList, error)
}

// UnimplementedInfoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedInfoServiceServer struct {
}

func (*UnimplementedInfoServiceServer) GetBangumiDetail(ctx context.Context, req *BangumiDetailReq) (*BangumiDetail, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBangumiDetail not implemented")
}
func (*UnimplementedInfoServiceServer) GetBangumiList(ctx context.Context, req *BangumiListReq) (*BangumiList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBangumiList not implemented")
}

func RegisterInfoServiceServer(s *grpc.Server, srv InfoServiceServer) {
	s.RegisterService(&_InfoService_serviceDesc, srv)
}

func _InfoService_GetBangumiDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BangumiDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoServiceServer).GetBangumiDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/InfoService/GetBangumiDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoServiceServer).GetBangumiDetail(ctx, req.(*BangumiDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _InfoService_GetBangumiList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BangumiListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoServiceServer).GetBangumiList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/InfoService/GetBangumiList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoServiceServer).GetBangumiList(ctx, req.(*BangumiListReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _InfoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "InfoService",
	HandlerType: (*InfoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBangumiDetail",
			Handler:    _InfoService_GetBangumiDetail_Handler,
		},
		{
			MethodName: "GetBangumiList",
			Handler:    _InfoService_GetBangumiList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bangumi.proto",
}

// FavoriteServiceClient is the client API for FavoriteService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FavoriteServiceClient interface {
	GetFavorite(ctx context.Context, in *FavoriteReq, opts ...grpc.CallOption) (*FavoriteRsp, error)
}

type favoriteServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFavoriteServiceClient(cc grpc.ClientConnInterface) FavoriteServiceClient {
	return &favoriteServiceClient{cc}
}

func (c *favoriteServiceClient) GetFavorite(ctx context.Context, in *FavoriteReq, opts ...grpc.CallOption) (*FavoriteRsp, error) {
	out := new(FavoriteRsp)
	err := c.cc.Invoke(ctx, "/FavoriteService/GetFavorite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FavoriteServiceServer is the server API for FavoriteService service.
type FavoriteServiceServer interface {
	GetFavorite(context.Context, *FavoriteReq) (*FavoriteRsp, error)
}

// UnimplementedFavoriteServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFavoriteServiceServer struct {
}

func (*UnimplementedFavoriteServiceServer) GetFavorite(ctx context.Context, req *FavoriteReq) (*FavoriteRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFavorite not implemented")
}

func RegisterFavoriteServiceServer(s *grpc.Server, srv FavoriteServiceServer) {
	s.RegisterService(&_FavoriteService_serviceDesc, srv)
}

func _FavoriteService_GetFavorite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FavoriteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoriteServiceServer).GetFavorite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FavoriteService/GetFavorite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoriteServiceServer).GetFavorite(ctx, req.(*FavoriteReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _FavoriteService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "FavoriteService",
	HandlerType: (*FavoriteServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFavorite",
			Handler:    _FavoriteService_GetFavorite_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bangumi.proto",
}

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	Sessions(ctx context.Context, in *SessionReq, opts ...grpc.CallOption) (*SessionRsp, error)
	Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterRsp, error)
}

type userServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserServiceClient(cc grpc.ClientConnInterface) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) Sessions(ctx context.Context, in *SessionReq, opts ...grpc.CallOption) (*SessionRsp, error) {
	out := new(SessionRsp)
	err := c.cc.Invoke(ctx, "/UserService/Sessions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterRsp, error) {
	out := new(RegisterRsp)
	err := c.cc.Invoke(ctx, "/UserService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	Sessions(context.Context, *SessionReq) (*SessionRsp, error)
	Register(context.Context, *RegisterReq) (*RegisterRsp, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) Sessions(ctx context.Context, req *SessionReq) (*SessionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sessions not implemented")
}
func (*UnimplementedUserServiceServer) Register(ctx context.Context, req *RegisterReq) (*RegisterRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_Sessions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Sessions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserService/Sessions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Sessions(ctx, req.(*SessionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Register(ctx, req.(*RegisterReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sessions",
			Handler:    _UserService_Sessions_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _UserService_Register_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bangumi.proto",
}
